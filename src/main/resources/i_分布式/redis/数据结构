key-value
五中数据结构
String 存储数字字符串
Hash 字典 Redis的哈希结构可以使你像在数据库中更新一个属性一样只修改某一项属性值 场景：修改用户属性
List 场景：消息队列
Set  场景：关注人和粉丝，redis实现了求交集并集等操作
Sorted Set 有序集合

Lpush key空则创建
Lpushx key空则什么都不做
Rpush
Rpushx
LPOP RPOP

Redis提供了两种方式对数据进行持久化，分别是RDB和AOF。
1、默认RDB
在指定的时间段内将内存中的数据快照到磁盘中，redis启动时再恢复到内存中，RDB的缺点就在于最后一次持久化后的数据有可能会丢失

2、AOF
以日志的形式来记录每个写操作，将Redis执行过的所有写指令记录下来。redis启动之初会读取该文件重新构建数据，换言之，redis
重启的话就根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作。

AOF的重写（Rewrite）
AOF采用文件追加方式，文件会越来越大为避免出现此种情况，新增了重写机制,
当AOF文件的大小超过所设定的阈值时，Redis就会启动AOF文件的内容压缩。


 同时开启两种方式优先使用AOF方式。