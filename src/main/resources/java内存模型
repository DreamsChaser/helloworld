计算机的存储设备和处理器的运算能力相差大，需要高速缓冲区。运算时，讲主内存的数据复制到
缓冲中，运算结束把缓冲区的数据同步到主内存中（缓存一致性，例如MSI协议）

在java中，所有实例域、静态域和数组元素存储在堆内存中，堆内存在线程之间共享，局部变量、方
法参数属于线程私有，不会被共享。

java内存模型中定义所有变量（实例域、静态域和数组元素）定义在主内存中，每个线程有自己的工
作内存，线程只能读写工作内存中的变量，不同线程无法访问各自的工作内存中的变量。

内存之间的操作
lock（锁定）    作用于主内存，把变量表示为一个线程独占
unlock（解锁）  作用于主内存，释放锁定变量，允许其他线程锁定
read（读取）    作用于主内存，将主内存中的变量读取到工作内存
load（载入）    作用于工作内存，将read操作读取的变量存放到工作内存的变量副本
use（使用）     作用于工作内存，把工作内存中的一个变量值传递给执行引擎（每当虚拟机遇到一个需要使用变量的值的字节码指令时将会执行这个操作。）
assign（赋值）  作用于工作内存，它把一个从执行引擎接收到的值赋值给工作内存的变量（每当虚拟机遇到一个给变量赋值的字节码指令时执行这个操作。）
store（存储）   作用于工作内存，将工作内存中的变量值传递到主内存
write（写入）   作用于主内存，将store操作传递的变量值同步到主内存的变量上

重排序
1、编译器优化的重排序
2、指令级并行的重排序
3、内存系统的重排序

2、3属于处理器的重排序
重排序与内存屏障？？？？？？？