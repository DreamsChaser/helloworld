web.xml配置了listener
服务部署是，调用监听器的ContextLoaderListener.contextInitialized()，在这个方法里通过createWebApplicationContext(servletContext);声明一个WebApplicationContext并赋值给ServletContext的org.springframework.web.context.WebApplicationContext.ROOT属性，作为WebApplicationContext的根上下文（root context）。
这里是DispatcherServlet的父上下文（即为spring容器）
DispatcherServlet在初始化的过程中，会建立一个自己的IoC容器上下文Servlet WebApplicationContext并把上面的容器作为父容器
init() 在FrameworkServlet实现
    PropertyValues：
    BeanWrapper
    ResourceLoader
    先通过PropertyValues获取web.xml文件init-param的参数值，然后通过ResourceLoader读取.xml配置信息，BeanWrapper对配置的标签进行解析和将系统默认的bean的各种属性设置到对应的bean属性。
    initWebApplicationContext 初始化SpringMVC 上下文容器，并作为值放到了ServletContext里 启动createWebApplicationContext()方法



    dispatcherServlet过程：调用HandleMapping得到handler
                        调用HandleAdapter执行handle过程(参数解析 过程调用)
                        调用ViewResolver进行视图解析
                        渲染视图