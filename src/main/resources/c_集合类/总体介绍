List有序（插入数据顺序）数据可以重复，可以插入null
ArrayList Vector
底层是数组实现，直接按序号索引元素，查询速度快而插入元素涉及数组元素移动等内存操作，所以插入数据慢，超过容量扩容 vector默认两倍 arraylist默认1.5倍
ArrayList不同步，线程不安全。
Vector同步，线程安全

Map
每一个实体都含有键和值两个对象
hashtable 线程安全 不允许键和值为空                  无序（降序）
hashmap 非线程安全 键可以允许有一个空，值可以多个空  HashMap的值是没有顺序的，它是按照key的HashCode来实现的
treemap 非线程安全 键不允许为空 值可以有多个空       按照Key的Ascii升序
linkedhashmap 按照插入顺序

map 键值对			HashTable      		HashMap      TreeMap     	LinkedHashMap     ConcurrentHashMap
默认排序		 	降序		   		////         升序        	插入顺序          升序
是否线程安全		线程安全	   		非            非         	非线程安全        线程安全
允许空值            键值都不允许为空				 不允许key为空					  都不允许为空

set不包含重复元素
    HashSet       TreeSet
    基于hashMap   基于treeMap
    线程不安全    线程不安全
    无序          可以设置顺序

如果两个对象相同，那么两个对象的hashcode也必须相同
否则我要map操作的时候 map存放的位置是根据对象的hashCode值来确定下标的，如果覆盖equals没有覆盖hashCode
那么同一个对象会在map中存放两个
所以覆盖equals方法时总要覆盖hashcode方法

hashmap死循环的问题



concurrentModificationException异常
用迭代器对arrayList迭代时如果在此期间修改了list的值会抛出异常
原因如下： 迭代器的next方法时
 if (modCount != expectedModCount)
                throw new ConcurrentModificationException();

  remove操作会修改modCount
