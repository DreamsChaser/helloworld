volatile保证数据的可见性和有序性

有主内存和工作内存
每个线程执行的时候会把主内存的变量复制一份到工作内存，在工作内存中进行 增删改查 执行结束之后才会把工作内存中的数据同步到主内存


可见性：1.当写一个volatile变量时，JMM会把该线程对应的本地内存中的共享变量刷新到主内存，同时通知其他工作内存中的变量无效
        2.当读一个volatile变量时，JMM会把该线程对应的本地内存置为无效。线程接下来将从主内存中读取共享变量。
        （同时锁也可以保证可见性）

有序性 禁止指令重排序
原理：volatile实际上相当于一个内存屏障（也成内存栅栏），内存屏障会提供3个功能：
它确保指令重排序时不会把其后面的指令排到内存屏障之前的位置，也不会把前面的指令排到内存屏障的后面；即在执行到内存屏障这句指令时，在它前面的操作已经全部完成；
它会强制将对缓存(工作内存)的修改操作立即写入主存
如果是写操作，它会导致其他CPU中对应的缓存行无效。

ha